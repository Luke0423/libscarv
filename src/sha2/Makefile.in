
SHA2_LIB  = scarvsha2

SHA2_PATHS= src/sha2 \
            src/sha2/$(ARCH) \
            src/share/util.c

SHA2_SRCS = $(foreach DIR,${SHA2_PATHS},$(wildcard ${DIR}/*.c)) \
            $(foreach DIR,${SHA2_PATHS},$(wildcard ${DIR}/*.S)) \

SHA2_HEAD = $(foreach DIR,${SHA2_PATHS},$(wildcard ${DIR}/*.h))

SHA2_FLAGS= $(addprefix -I,$(SHA2_PATHS))

# Create targets for the headers
$(foreach FILE,$(SHA2_HEAD),$(eval $(call tgt_include_header,$(FILE),sha2)))
$(foreach FILE,$(SHA2_SRCS),$(eval $(call tgt_obj,$(FILE),sha2,$(SHA2_FLAGS))))
$(foreach FILE,$(SHA2_SRCS),$(eval $(call tgt_disasm,$(FILE),sha2,$(SHA2_FLAGS))))


SHA2_HEADERS =$(foreach FILE, $(SHA2_HEAD), $(call map_include,$(FILE),sha2))
SHA2_OBJS    =$(foreach FILE, $(SHA2_SRCS), $(call map_obj,$(FILE),sha2))
SHA2_DISASM  =$(foreach FILE, $(SHA2_SRCS), $(call map_disasm,$(FILE),sha2))

# Add to the list of headers/objects etc to create.
HEADERS += $(SHA2_HEADERS)
OBJS    += $(SHA2_OBJS)
DISASM  += $(SHA2_DISASM)

# libscarvsha2 to the list of static libraries to build
LIBS += $(call map_static_lib,$(SHA2_LIB))
$(eval $(call tgt_static_lib,$(SHA2_OBJS),$(SHA2_LIB)))
