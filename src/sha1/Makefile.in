
SHA1_LIB  = scarvsha1

SHA1_PATHS= src/sha1 \
            src/sha1/$(ARCH) \

SHA1_SRCS = $(foreach DIR,${SHA1_PATHS},$(wildcard ${DIR}/*.c)) \
            $(foreach DIR,${SHA1_PATHS},$(wildcard ${DIR}/*.S)) \
            src/share/util.c

SHA1_HEAD = $(foreach DIR,${SHA1_PATHS},$(wildcard ${DIR}/*.h))

SHA1_FLAGS= $(addprefix -I,$(SHA1_PATHS))

# Create targets for the headers
$(foreach FILE,$(SHA1_HEAD),$(eval $(call tgt_include_header,$(FILE),sha1)))
$(foreach FILE,$(SHA1_SRCS),$(eval $(call tgt_obj,$(FILE),sha1,$(SHA1_FLAGS))))
$(foreach FILE,$(SHA1_SRCS),$(eval $(call tgt_disasm,$(FILE),sha1,$(SHA1_FLAGS))))


SHA1_HEADERS =$(foreach FILE, $(SHA1_HEAD), $(call map_include,$(FILE),sha1))
SHA1_OBJS    =$(foreach FILE, $(SHA1_SRCS), $(call map_obj,$(FILE),sha1))
SHA1_DISASM  =$(foreach FILE, $(SHA1_SRCS), $(call map_disasm,$(FILE),sha1))

# Add to the list of headers/objects etc to create.
HEADERS += $(SHA1_HEADERS)
OBJS    += $(SHA1_OBJS)
DISASM  += $(SHA1_DISASM)

# libscarvsha1 to the list of static libraries to build
LIBS += $(call map_static_lib,$(SHA1_LIB))
$(eval $(call tgt_static_lib,$(SHA1_OBJS),$(SHA1_LIB)))

